
@namespace FamilyTask.Shared.Components
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject ITaskDataService taskDataService
@using WebClient.Abstractions
@using Domain.ViewModel
@using WebClient.Shared.Components

<style>
    .menu-wrapper {
        background: #FBFBFB;
        box-shadow: 2px 0px 4px 2px rgba(0, 0, 0, 0.12);
        overflow-y: auto;
        height: 100%;
    }

        .menu-wrapper .menu-item {
            background: #FFFFFF;
            box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.12);
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            border: 3px solid #FFFFFF;
        }



            .menu-wrapper .menu-item.active {
                border: 3px solid #CC1778;
            }

        .menu-wrapper .add-menu-item {
            border: 1px dashed #000000;
            box-sizing: border-box;
            filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.12));
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

    .add-menu-item .fa {
        font-size: 12px;
    }

    .menu-wrapper .label {
        color: #000000;
        font-family: "Poppins Regular";
        font-size: 24px;
        line-height: 36px;
    }

    .menu-wrapper .avtar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
    }

    @@media(max-width: 1400px) {
        .menu-wrapper .label {
            font-size: 16px;
            line-height: 24px;
        }

        .menu-wrapper .avtar {
            width: 24px;
            height: 24px;
        }
    }

    @@media(max-width: 767.98px) {
        .menu-wrapper .avtar {
            width: 16px;
            height: 16px;
        }
    }



    .dropzone {
        border: 2px dashed #0087F7;
        border-radius: 5px;
        background: white;
        margin-bottom: 3rem;
    }

        .dropzone .dz-message {
            font-weight: 400;
        }

            .dropzone .dz-message .note {
                font-size: 0.8em;
                font-weight: 200;
                display: block;
                margin-top: 1.4rem;
            }
</style>

<div class="menu-wrapper col-12 p-0">
    @if (MenuItems != null && MenuItems.Length > 0)
    {
        <input type="hidden" id="dragTaskId" />
        @foreach (var item in MenuItems)
        {
            <LeftMenuItem TaskDropCallback="Task_OnDrop" Item="@item" ></LeftMenuItem>

        }
    }

    <div class="add-menu-item label col-10 offset-1 p-3 my-4 p-sm-2" @onclick="@OnAddItem">
        <span class="fa fa-plus"></span> &nbsp; Add Member
    </div>
</div>

@code {


    [Parameter]
    public MenuItem[] MenuItems { get; set; }

    [Parameter]
    public EventCallback OnAddItem { get; set; }

    [Parameter]
    public EventCallback<TaskMemberVm> TaskAssignedCallback { get; set; }


    public async Task Task_OnDrop(TaskMemberVm task)
    {
        await taskDataService.AssignTaskToMember(task.TaskId.ToString(), task.MemberId.ToString());

        await TaskAssignedCallback.InvokeAsync(task);

    }

}